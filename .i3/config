# This file has been auto-generated by i4-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
### font pango:DejaVu Sans Mono 8
#font pango: Monospace 9
# Before i3 v4.8, we used to recommend this one as the default:
#font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
#font xft:Hack Nerd Font, FontAwesome 10
#font pango:monospace 8, FontAwesome 8
#font pango: M+ 1m, FontAwesome, Ionicons, 10
font pango:System San Francisco Display, FontAwesome 9
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
#bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Return exec kitty --single-instance

# kill focused window
bindsym $mod+q kill
bindsym $mod+F4 kill

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run
bindsym $mod+Shift+d exec /home/kfiala/bin/dmenu-aliases
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
bindsym $mod+F2 exec --no-startup-id j4-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

bindsym $mod+n workspace next_on_output
bindsym $mod+p workspace prev_on_output
bindsym --whole-window $mod+button5 workspace next_on_output
bindsym --whole-window $mod+button4 workspace prev_on_output

# split in horizontal orientation
bindsym $mod+g split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# switch to workspace
bindsym $mod+plus workspace number 1
bindsym $mod+ecaron workspace number 2
bindsym $mod+scaron workspace number 3
bindsym $mod+ccaron workspace number 4
bindsym $mod+rcaron workspace number 5
bindsym $mod+zcaron workspace number 6
bindsym $mod+yacute workspace number 7
bindsym $mod+aacute workspace number 8
bindsym $mod+iacute workspace number 9
bindsym $mod+eacute workspace number 10
bindsym $mod+semicolon workspace number 0

# move focused container to workspace
bindsym $mod+Shift+plus move container to workspace number 1
bindsym $mod+Shift+ecaron move container to workspace number 2
bindsym $mod+Shift+scaron move container to workspace number 3
bindsym $mod+Shift+ccaron move container to workspace number 4
bindsym $mod+Shift+rcaron move container to workspace number 5
bindsym $mod+Shift+zcaron move container to workspace number 6
bindsym $mod+Shift+yacute move container to workspace number 7
bindsym $mod+Shift+aacute move container to workspace number 8
bindsym $mod+Shift+iacute move container to workspace number 9
bindsym $mod+Shift+eacute move container to workspace number 10
bindsym $mod+Shift+semicolon move container to workspace number 0


# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym uring resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"
bindsym $mod+dead_acute resize grow width 10 px or 10 ppt
bindsym $mod+equal resize shrink width 10 px or 10 ppt
bindsym $mod+parenright resize grow height 10 px or 10 ppt
bindsym $mod+uacute resize shrink height 10 px or 10 ppt

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
	#position top
	# mode hide
	modifier $mod
        status_command i3status
        #tray_output LVDS1
	#tray_output DP1
	tray_output primary
}

# volume control
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && killall -USR1 i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && killall -USR1 i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && killall -USR1 i3status

# brightness control
#bindsym XF86MonBrightnessDown exec --no-startup-id xbacklight -steps 1 -time 0 -dec 5
#bindsym XF86MonBrightnessUp exec --no-startup-id xbacklight -steps 1 -time 0 -inc 10
bindsym XF86MonBrightnessDown exec --no-startup-id /bin/sh -c "echo $(($(cat /sys/class/backlight/intel_backlight/brightness) - 1000)) | sudo tee /sys/class/backlight/intel_backlight/brightness && echo $(( $(echo $((100000/$(cat /sys/class/backlight/intel_backlight/max_brightness)))) * $(($(cat /sys/class/backlight/intel_backlight/brightness) - 1000)) / 1000 )) | tee /tmp/brightness && killall -USR1 i3status"
bindsym XF86MonBrightnessUp exec --no-startup-id /bin/sh -c "echo $(($(cat /sys/class/backlight/intel_backlight/brightness) + 1000)) | sudo tee /sys/class/backlight/intel_backlight/brightness && echo $(( $(echo $((100000/$(cat /sys/class/backlight/intel_backlight/max_brightness)))) * $(($(cat /sys/class/backlight/intel_backlight/brightness) + 1000)) / 1000 )) | tee /tmp/brightness && killall -USR1 i3status"

# scratchpad
bindsym $mod+m move scratchpad
bindsym $mod+o scratchpad show

# workspace assignment (use "xprop")
#assign [class="^kate$"] 3

# custom window settings
for_window [class="^Google-chrome$"] border none

# get elluminate working
for_window [class="Vncviewer"] floating enable

# browser pop-ups
for_window [window_role="pop-up"] floating enable

for_window [title="^Copying*"] floating enable
for_window [title="^Moving*"] floating enable

# new_window none
# new_float none

for_window [class="^.*"] border pixel 1

hide_edge_borders both

bindsym $mod+comma exec --no-startup-id i3-input -F 'rename workspace to "%s"' -P 'New name: '

bindsym $mod+Control+l exec --no-startup-id i3lock -c 000050 && sleep 0.5 && xset -display :0.0 dpms force off
#exec xautolock -detectsleep -time 10 -locker 'i3lock -c 000050' &
exec --no-startup-id xss-lock -- i3lock -c 000050 &


bindsym $mod+Shift+q exec --no-startup-id "xterm -e xkill"

# mod+f5 to turn off display
bindsym $mod+F5 exec --no-startup-id sleep 0.2 && xset -display :0.0 dpms force off

bindsym --release $mod+Print exec --no-startup-id "scrot -s -e 'xclip -selection clipboard -t image/png -i $f'"
bindsym --release Print exec --no-startup-id "scrot -e 'xclip -selection clipboard -t image/png -i $f'"
bindsym --release $mod+Shift+Print exec --no-startup-id "scrot -u -d 3 -e 'xclip -selection clipboard -t image/png -i $f'"

bindsym $mod+Shift+u move workspace to output up
bindsym $mod+u move workspace to output right
bindsym $mod+Shift+z move workspace to output down
bindsym $mod+z move workspace to output left

bindsym $mod+Shift+m exec --no-startup-id autorandr --change && [ -z "$(autorandr --detected)" ] && arandr
bindsym $mod+Shift+s exec --no-startup-id /home/kfiala/bin/switch-sound.sh

#bindsym $mod+Shift+n exec sudo netplan apply

# startup
# set keyboard layout
#exec setxkbmap -layout cz,us
#exec setxkbmap -option 'grp:ctrl_alt_toggle'

exec_always xsetroot -solid "#000000" &
exec_always xset -b &
#exec xmodmap -e "keycode 107 = Menu NoSymbol Menu"
exec_always xset r rate 150 60 &

exec pasystray &
#exec insync start &
#exec udiskie -t &
exec udiskie --no-automount --no-notify --tray &
exec xhost +local:root &
#exec xinput --set-prop "ETPS/2 Elantech TrackPoint" "libinput Accel Speed" 0.8 &
# https://wiki.archlinux.org/title/Touchpad_Synaptics
exec_always synclient TapButton1=1
exec_always synclient TapButton2=2
exec_always synclient TapButton3=3
exec_always synclient PalmDetect=1
exec_always synclient PalmMinWidth=4
exec_always synclient PalmMinZ=50
exec_always synclient HorizTwoFingerScroll=1
exec syndaemon -i 0.3 -t -K -R -d
exec_always synclient AreaRightEdge=2800


#exec --no-startup-id xdotool behave_screen_edge bottom exec --sync /home/kfiala/bin/idle-saver.sh
exec --no-startup-id /bin/bash -c "while ((1)) ; do bash ~/bin/idle-saver.sh ; done" &
exec --no-startup-id /bin/bash  /home/kfiala/bin/tailscale-auto.sh &

# Suspend to RAM (s2idle) used not to work correctly. Starting from Linux Kernel 5.14, the problem has been solved and s2idle works perfectly
#exec /bin/sh -c "echo deep | sudo tee /sys/power/mem_sleep"

#exec nohup sudo /usr/bin/python3 /opt/asus-touchpad-numpad-driver/asus_touchpad.py &

## Set charging limit to 80% by default
#exec --no-startup-id /bin/sh -c "echo 80 | sudo tee /sys/class/power_supply/BAT0/charge_control_end_threshold" &

# Read the Brightness level
exec --no-startup-id /bin/sh -c "echo $(( $(echo $((100000/$(cat /sys/class/backlight/intel_backlight/max_brightness)))) * $(cat /sys/class/backlight/intel_backlight/brightness) / 1000 )) | tee /tmp/brightness" &

# Run 1password
exec --no-startup-id 1password --silent &

# Set monitors
exec --no-startup-id autorandr --change &

